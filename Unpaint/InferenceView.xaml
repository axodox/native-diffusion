<Page
  x:Class="Unpaint.InferenceView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Unpaint"
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  xmlns:graphics="using:Windows.Graphics"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">

  <Page.Resources>
    <local:IsNanToBooleanConverter x:Key="IsNanToBooleanConverter"/>
    <local:NanToZeroConverter x:Key="NanToZeroConverter"/>
    <local:StringToImageSourceConverter x:Key="StringToImageSourceConverter"/>
    <local:BooleanInverter x:Key="BooleanInverter"/>
    <local:BooleanToGridLengthConverter x:Key="BooleanToGridLengthConverter"/>
    <local:StorageFileToImageSourceConverter x:Key="StorageFileToImageSourceConverter"/>
    <local:IsNullConverter x:Key="IsNullConverter"/>
    <local:IsNullConverter x:Key="IsNotNullConverter" IsNegating="True"/>
    <local:BooleanSwitchConverter x:Key="BooleanToPaneSpacingConverter">
      <local:BooleanSwitchConverter.TrueValue>
        <x:Double>42</x:Double>
      </local:BooleanSwitchConverter.TrueValue>
      <local:BooleanSwitchConverter.FalseValue>
        <x:Double>0</x:Double>
      </local:BooleanSwitchConverter.FalseValue>
    </local:BooleanSwitchConverter>

    <local:BooleanSwitchConverter x:Key="BooleanToGenerateIconConverter">
      <local:BooleanSwitchConverter.TrueValue>
        <x:String>&#xeb9d;</x:String>
      </local:BooleanSwitchConverter.TrueValue>
      <local:BooleanSwitchConverter.FalseValue>
        <x:String>&#xe768;</x:String>
      </local:BooleanSwitchConverter.FalseValue>
    </local:BooleanSwitchConverter>

    <local:EqualsConverter x:Key="IsCreateModeSelectedConverter">
      <local:EqualsConverter.Value>
        <x:Int32>0</x:Int32>
      </local:EqualsConverter.Value>
    </local:EqualsConverter>

    <local:EqualsConverter x:Key="IsModifyModeSelectedConverter">
      <local:EqualsConverter.Value>
        <x:Int32>1</x:Int32>
      </local:EqualsConverter.Value>
    </local:EqualsConverter>

    <Style x:Key="HeaderButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="4,0"/>
      <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="HeaderSplitButtonStyle" TargetType="muxc:SplitButton">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="4,0"/>
      <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="PaneHeaderStyle" TargetType="Border">
      <Setter Property="Background" Value="{ThemeResource LayerFillColorDefaultBrush}"/>
      <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}"/>
      <Setter Property="CornerRadius" Value="6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="6"/>
      <Setter Property="Margin" Value="12"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="ImagePlaceholderStyle" TargetType="TextBlock">
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="TextAlignment" Value="Center"/>
      <Setter Property="TextWrapping" Value="WrapWholeWords"/>
      <Setter Property="Margin" Value="24"/>
    </Style>
  </Page.Resources>
  
  <Grid Grid.RowSpacing="6">    
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState x:Name="CommandPanelVisualState">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsStatusVisible, Mode=OneWay, Converter={StaticResource BooleanInverter}}"/>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>            
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="CommandPanel" Storyboard.TargetProperty="(StackPanel.Opacity)" Duration="0:0:0.5" To="1" FillBehavior="HoldEnd"/>
              <DoubleAnimation Storyboard.TargetName="StatusMessage" Storyboard.TargetProperty="(UiElement.Opacity)" Duration="0:0:0.5" To="0" FillBehavior="HoldEnd"/>
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState x:Name="StatusMessageVisualState">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsStatusVisible, Mode=OneWay}"/>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="CommandPanel" Storyboard.TargetProperty="(StackPanel.Opacity)" Duration="0:0:0.5" To="0" FillBehavior="HoldEnd"/>
              <DoubleAnimation Storyboard.TargetName="StatusMessage" Storyboard.TargetProperty="(UiElement.Opacity)" Duration="0:0:0.5" To="0.5" FillBehavior="HoldEnd"/>
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <Border IsHitTestVisible="False">
      <Border.KeyboardAccelerators>
        <KeyboardAccelerator Key="Home" Invoked="OnFirstImageInvoked"/>
        <KeyboardAccelerator Key="PageUp" Invoked="OnPreviousImageInvoked"/>
        <KeyboardAccelerator Key="PageDown" Invoked="OnNextImageInvoked"/>
        <KeyboardAccelerator Key="End" Invoked="OnLastImageInvoked"/>
      </Border.KeyboardAccelerators>
    </Border>

    <!-- Status -->
    <local:TitleBarHost>
      <Grid x:Name="StatusBar">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Command panel -->
        <StackPanel x:Name="CommandPanel" Grid.Column="1" HorizontalAlignment="Center" Spacing="6" Orientation="Horizontal" Padding="0,3" Opacity="0">
          <!-- Copy image -->
          <Button Content="&#xe8c8;" ToolTipService.ToolTip="Copy image" Style="{StaticResource HeaderButtonStyle}"
                  Click="{x:Bind ViewModel.Project.CopyToClipboard}" IsEnabled="{x:Bind ViewModel.Project.HasImageSelected, Mode=OneWay}"/>

          <!-- Save image as -->
          <Button Content="&#xe792;" ToolTipService.ToolTip="Save image as..." Style="{StaticResource HeaderButtonStyle}"
                  Click="{x:Bind ViewModel.Project.SaveImageAs}" IsEnabled="{x:Bind ViewModel.Project.HasImageSelected, Mode=OneWay}">
            <Button.KeyboardAccelerators>
              <KeyboardAccelerator Key="S" Modifiers="Control"/>
            </Button.KeyboardAccelerators>
          </Button>
        
          <!-- Delete image -->
          <Button Content="&#xe74d;" ToolTipService.ToolTip="Delete image..." Style="{StaticResource HeaderButtonStyle}"
                  Click="{x:Bind ViewModel.Project.DeleteImage}" IsEnabled="{x:Bind ViewModel.Project.HasImageSelected, Mode=OneWay}">
            <Button.KeyboardAccelerators>
              <KeyboardAccelerator Key="Delete"/>
            </Button.KeyboardAccelerators>
          </Button>
        
          <!-- Page count -->
          <TextBlock Text="{x:Bind ViewModel.Project.ImagePosition, Mode=OneWay}" FontFamily="Segoe UI Mono" VerticalAlignment="Center" Margin="12,0" IsHitTestVisible="False" Opacity="0.5"/>
        
          <!-- Project management -->
          <muxc:SplitButton Content="&#xe838;" Padding="0" ToolTipService.ToolTip="Open project directory..." Style="{StaticResource HeaderSplitButtonStyle}"
                            Click="{x:Bind ViewModel.Project.OpenProjectDirectory}">
            <muxc:SplitButton.Flyout>
              <Flyout>
                <Flyout.FlyoutPresenterStyle>
                  <Style TargetType="FlyoutPresenter">
                    <Setter Property="Padding" Value="0"/>
                  </Style>
                </Flyout.FlyoutPresenterStyle>

                <StackPanel>
                  <ListView ItemsSource="{x:Bind ViewModel.Project.Projects, Mode=OneWay}"
                            SelectedIndex="{x:Bind ViewModel.Project.SelectedProjectIndex, Mode=TwoWay}"/>
                  <MenuFlyoutSeparator/>
                  <MenuFlyoutItem Text="Create new project..." Click="{x:Bind ViewModel.Project.CreateNewProject}"/>
                  <MenuFlyoutItem Text="Delete current project..." Click="{x:Bind ViewModel.Project.DeleteProject}" IsEnabled="{x:Bind ViewModel.Project.CanDeleteProject, Mode=OneWay}"/>
                </StackPanel>
              </Flyout>
            </muxc:SplitButton.Flyout>
          </muxc:SplitButton>
        
          <!-- Settings -->
          <Button Content="&#xe713;" ToolTipService.ToolTip="Open settings" Style="{StaticResource HeaderButtonStyle}"
                  Click="{x:Bind ViewModel.OpenSettings}"/>
        </StackPanel>

        <!-- Progress bar & status message -->
        <muxc:ProgressBar Grid.ColumnSpan="3" Value="{x:Bind ViewModel.Progress, Mode=OneWay, Converter={StaticResource NanToZeroConverter}}" IsIndeterminate="{x:Bind ViewModel.Progress, Mode=OneWay, Converter={StaticResource IsNanToBooleanConverter}}" VerticalAlignment="Top" Background="Transparent" Maximum="1" IsHitTestVisible="False" />
        <TextBlock x:Name="StatusMessage" Grid.Column="1" Text="{x:Bind ViewModel.Status, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" Opacity="0"/>
      </Grid>
    </local:TitleBarHost>

    <!-- Main section -->
    <Grid ColumnSpacing="{x:Bind IsInputPaneVisible, Converter={StaticResource BooleanToPaneSpacingConverter}, Mode=OneWay}" Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{x:Bind IsInputPaneVisible, Converter={StaticResource BooleanToGridLengthConverter}, Mode=OneWay}"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      
      <!-- Output image -->
      <FlipView x:Name="OutputImagesView" Grid.Column="1" Background="Transparent" AllowDrop="True" DragOver="OnImageDragOver" Drop="OnImageDrop"
                ItemsSource="{x:Bind ViewModel.Project.Images, Mode=OneWay}"
                SelectedIndex="{x:Bind ViewModel.Project.SelectedImageIndex, Mode=TwoWay}">
        <FlipView.ItemTemplate>
          <DataTemplate x:DataType="x:String">
            <Image Grid.Row="1" Stretch="Uniform" Source="{x:Bind Converter={StaticResource StringToImageSourceConverter}}" CanDrag="True" DragStarting="OnOutputImageDragStarting" DropCompleted="OnOutputImageDropCompleted"/>
          </DataTemplate>
        </FlipView.ItemTemplate>
      </FlipView>

      <TextBlock Grid.Column="1" Style="{StaticResource ImagePlaceholderStyle}" Visibility="{x:Bind ViewModel.Project.SelectedImage, Converter={StaticResource IsNullConverter}, Mode=OneWay}" IsHitTestVisible="False">
        <Run FontWeight="Bold" FontSize="20">No Output Image</Run>
        <LineBreak/>
        <LineBreak/>
        <Run>Press the generate button below to generate a new one.</Run>
        <LineBreak/>
        <Run>You may also add images from external sources by dragging and dropping them here.</Run>
      </TextBlock>

      <!-- Input image -->
      <Grid x:Name="InputImageView"  Grid.Column="0" Visibility="{x:Bind IsInputPaneVisible, Mode=OneWay}" AllowDrop="True" DragOver="OnImageDragOver" Drop="OnImageDrop" Background="Transparent">
        <local:MaskEditor x:Name="InputMaskEditor"
                          MaskResolution="{x:Bind ViewModel.InputResolution, Mode=OneWay}"
                          MaskImage="{x:Bind ViewModel.InputMask, Mode=TwoWay}"
                          Visibility="{x:Bind ViewModel.InputImage, Converter={StaticResource IsNotNullConverter}, Mode=OneWay}">
          <Grid>
            <Image Source="{x:Bind ViewModel.InputImage, Converter={StaticResource StorageFileToImageSourceConverter}, Mode=OneWay}"/>
            <Image Source="{x:Bind ViewModel.FeatureMask, Mode=OneWay}"/>
          </Grid>
        </local:MaskEditor>

        <Button Margin="6,0,-36,0" Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Center" Content="&#xe76b;" FontFamily="{StaticResource SymbolThemeFontFamily}" Padding="0"
                Click="{x:Bind ViewModel.UseCurrentImageAsInput}" IsEnabled="{x:Bind ViewModel.Project.HasImageSelected, Mode=OneWay}" ToolTipService.ToolTip="Use current image as input"/>
      </Grid>

      <TextBlock Grid.Column="0" Style="{StaticResource ImagePlaceholderStyle}" Visibility="{x:Bind ViewModel.InputImage, Converter={StaticResource IsNullConverter}, Mode=OneWay}" IsHitTestVisible="False">
        <Run FontWeight="Bold" FontSize="20">No Input Image</Run>
        <LineBreak/>
        <LineBreak/>
        <Run>Press the copy output button on the right to use the output image.</Run>
        <LineBreak/>
        <Run>You may also add images from external sources by dragging and dropping them here.</Run>
      </TextBlock>

      <!-- Headers -->
      <Border Grid.Column="0" Style="{StaticResource PaneHeaderStyle}" Visibility="{x:Bind IsInputPaneVisible, Mode=OneWay}" IsHitTestVisible="False">
        <TextBlock Text="Input"/>
      </Border>

      <Border Grid.Column="1" Style="{StaticResource PaneHeaderStyle}" Visibility="{x:Bind IsInputPaneVisible, Mode=OneWay}" IsHitTestVisible="False">
        <TextBlock Text="Output"/>
      </Border>
      
      <!-- Status messages -->
      <muxc:InfoBar Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="12"
                    IsOpen="{x:Bind ViewModel.HasSafetyCheckFailed, Mode=OneWay}" Severity="Warning" Title="Inappropriate output"
                    Message="The safety checker has detected an explicit image, please refine your prompt." />
    </Grid>

    <!-- Inference options -->
    <Grid Grid.Row="2" CornerRadius="6,6,0,0" MaxWidth="800" BorderThickness="1"
          Background="{ThemeResource LayerFillColorDefaultBrush}"
          BorderBrush="{ThemeResource ControlElevationBorderBrush}">
      
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <!-- Top section -->
      <Grid Margin="6" ColumnSpacing="12">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- Modify controls -->
        <Grid Visibility="{x:Bind ViewModel.SelectedModeIndex, Mode=OneWay, Converter={StaticResource IsModifyModeSelectedConverter}}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>

          <!-- Open input pane -->
          <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="6">
            <Button FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Content="&#xe91b;" 
                    Style="{StaticResource FlatButtonStyle}" Click="{x:Bind ToggleInputPane}">
              <ToolTipService.ToolTip>
                <StackPanel>
                  <TextBlock Text="Input image" FontWeight="Bold"/>
                  <TextBlock Text="Open the input pane to define inputs, or use the current image." TextWrapping="WrapWholeWords"/>
                </StackPanel>
              </ToolTipService.ToolTip>
            </Button>

            <Button FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Content="&#xe77f;" 
                    Style="{StaticResource FlatButtonStyle}" Click="{x:Bind PasteFromClipboard}"
                    ToolTipService.ToolTip="Paste input image from clipboard"/>
          </StackPanel>          
          
          <!-- Denoising strength -->
          <Slider Grid.Column="1" Minimum="0" Maximum="1" SmallChange="0.01" LargeChange="0.1" StepFrequency="0.01" VerticalAlignment="Center" Margin="6,-10"
                  Value="{x:Bind ViewModel.DenoisingStrength, Mode=TwoWay}"/>

          <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="6">
            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Glyph="&#xf4a5;" VerticalAlignment="Center" Margin="6,0,0,0">
              <ToolTipService.ToolTip>
                <StackPanel>
                  <TextBlock Text="Denoising strength" FontWeight="Bold"/>
                  <TextBlock Text="Defines how much the original image can be changed to fit the prompt." TextWrapping="WrapWholeWords"/>
                </StackPanel>
              </ToolTipService.ToolTip>
            </FontIcon>

            <Button FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Content="&#xe945;" Style="{StaticResource FlatButtonStyle}">
              <ToolTipService.ToolTip>
                <StackPanel>
                  <TextBlock Text="ControlNet options" FontWeight="Bold"/>
                  <TextBlock Text="Use additional inputs to control image generation." TextWrapping="WrapWholeWords"/>
                </StackPanel>
              </ToolTipService.ToolTip>
              <Button.Flyout>
                <Flyout>
                  <local:ControlNetOptionsView/>
                </Flyout>
              </Button.Flyout>
            </Button>
          </StackPanel>          
        </Grid>
        
        <!-- Mode selector -->
        <ComboBox Grid.Column="1" Width="120" SelectedIndex="{x:Bind ViewModel.SelectedModeIndex, Mode=TwoWay}">
          <ToolTipService.ToolTip>
            <StackPanel>
              <TextBlock Text="Mode Selector" FontWeight="Bold"/>
              <TextBlock Text="Selects what work to perform:&#xA;- Create: generate new images from scratch&#xA;- Modify: transform an existing image" TextWrapping="WrapWholeWords"/>
            </StackPanel>
          </ToolTipService.ToolTip>

          <ComboBoxItem>Create</ComboBoxItem>
          <ComboBoxItem>Modify</ComboBoxItem>
        </ComboBox>

        <!-- General controls -->
        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="6">
          <Button FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Content="&#xe71b;" Style="{StaticResource FlatButtonStyle}" ToolTipService.ToolTip="Copy prompt link to clipboard."
                  Click="{x:Bind ViewModel.CopyPromptLink}"/>
          <Button FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Content="&#xe92f;" Style="{StaticResource FlatButtonStyle}" ToolTipService.ToolTip="Copy generation settings from the current image."
                  Click="{x:Bind ViewModel.Project.LoadSettingsFromCurrentImage}" IsEnabled="{x:Bind ViewModel.Project.HasImageSelected, Mode=OneWay}"/>
          <ToggleSwitch FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" OnContent="&#xe718;" OffContent="&#xe77a;" VerticalAlignment="Center" Margin="0,-10" Background="Transparent"
                        IsOn="{x:Bind ViewModel.IsSettingsLocked, Mode=TwoWay}" Style="{StaticResource FlatToggleSwitchStyle}" PointerPressed="{x:Bind ToggleSettingsLock}"
                        ToolTipService.ToolTip="Lock custom settings or show the settings used for generating the selected image."/>
          <ToggleSwitch FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" OnContent="&#xe893;" OffContent="&#xe769;" VerticalAlignment="Center" Margin="0,-10" Background="Transparent"
                        IsOn="{x:Bind ViewModel.IsJumpingToLatestImage, Mode=TwoWay}" Style="{StaticResource FlatToggleSwitchStyle}" PointerPressed="{x:Bind ToggleJumpingToLatestImage}"
                        ToolTipService.ToolTip="Go to the latest image after generation or keep showing the current image."/>
        </StackPanel>

      </Grid>      

      <!-- Bottom section -->
      <Grid ColumnSpacing="6" Padding="6" Grid.Row="1"
            Background="{ThemeResource LayerFillColorAltBrush}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Inference settings -->
        <Button Grid.Column="0" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="24" Content="&#xe9e9;" ToolTipService.ToolTip="Inference Options" VerticalAlignment="Stretch">
          <Button.Flyout>
            <Flyout>
              <local:InferenceOptionsView/>
            </Flyout>
          </Button.Flyout>
        </Button>

        <!-- Prompt editor -->
        <local:PromptEditorView Grid.Column="1"/>

        <!-- Execute -->
        <Button Grid.Column="2" VerticalAlignment="Stretch" Click="{x:Bind ViewModel.GenerateImage}">
          <ToolTipService.ToolTip>
            <StackPanel>
              <TextBlock Text="Generate image" FontWeight="Bold"/>
              <TextBlock Text="Press once when idling to generate a single image. Press during generation to turn on/off auto generation mode." TextWrapping="WrapWholeWords"/>
            </StackPanel>
          </ToolTipService.ToolTip>
          <Button.Content>
            <FontIcon Glyph="{x:Bind ViewModel.IsAutoGenerationEnabled, Converter={StaticResource BooleanToGenerateIconConverter}, Mode=OneWay}" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="24"/>
          </Button.Content>
          <Button.KeyboardAccelerators>
            <KeyboardAccelerator Key="Enter"/>
          </Button.KeyboardAccelerators>
        </Button>
      </Grid>      
    </Grid>    
  </Grid>
</Page>
