<Page
  x:Class="Unpaint.InferenceView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Unpaint"
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  xmlns:graphics="using:Windows.Graphics"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">

  <Page.Resources>
    <local:SizeToStringConverter x:Key="SizeToStringConverter"/>
    <local:IsNanToBooleanConverter x:Key="IsNanToBooleanConverter"/>
    <local:NanToZeroConverter x:Key="NanToZeroConverter"/>
    <local:StringToImageSourceConverter x:Key="StringToImageSourceConverter"/>
    <local:BooleanInverter x:Key="BooleanInverter"/>

    <Style x:Key="HeaderButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="4,0"/>
      <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="HeaderSplitButtonStyle" TargetType="muxc:SplitButton">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="4,0"/>
      <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
  </Page.Resources>

  <Grid>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState x:Name="CommandPanelVisualState">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsStatusVisible, Mode=OneWay, Converter={StaticResource BooleanInverter}}"/>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>            
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="CommandPanel" Storyboard.TargetProperty="(StackPanel.Opacity)" Duration="0:0:0.5" To="1" FillBehavior="HoldEnd"/>
              <DoubleAnimation Storyboard.TargetName="StatusMessage" Storyboard.TargetProperty="(UiElement.Opacity)" Duration="0:0:0.5" To="0" FillBehavior="HoldEnd"/>
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState x:Name="StatusMessageVisualState">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsStatusVisible, Mode=OneWay}"/>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="CommandPanel" Storyboard.TargetProperty="(StackPanel.Opacity)" Duration="0:0:0.5" To="0" FillBehavior="HoldEnd"/>
              <DoubleAnimation Storyboard.TargetName="StatusMessage" Storyboard.TargetProperty="(UiElement.Opacity)" Duration="0:0:0.5" To="0.5" FillBehavior="HoldEnd"/>
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <!-- Status -->
    <Grid x:Name="StatusBar">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <!-- Command panel -->
      <StackPanel x:Name="CommandPanel" Grid.Column="1" HorizontalAlignment="Center" Spacing="6" Orientation="Horizontal" Padding="0,3" Opacity="0">
        <!-- Copy image -->
        <Button Content="&#xe8c8;" ToolTipService.ToolTip="Copy image" Style="{StaticResource HeaderButtonStyle}"
                Click="{x:Bind ViewModel.CopyToClipboard}" IsEnabled="{x:Bind ViewModel.HasImageSelected, Mode=OneWay}">
          <Button.KeyboardAccelerators>
            <KeyboardAccelerator Key="C" Modifiers="Control"/>
          </Button.KeyboardAccelerators>
        </Button>
        
        <!-- Save image as -->
        <Button Content="&#xe792;" ToolTipService.ToolTip="Save image as..." Style="{StaticResource HeaderButtonStyle}"
                Click="{x:Bind ViewModel.SaveImageAs}" IsEnabled="{x:Bind ViewModel.HasImageSelected, Mode=OneWay}">
          <Button.KeyboardAccelerators>
            <KeyboardAccelerator Key="S" Modifiers="Control"/>
          </Button.KeyboardAccelerators>
        </Button>
        
        <!-- Delete image -->
        <Button Content="&#xe74d;" ToolTipService.ToolTip="Delete image..." Style="{StaticResource HeaderButtonStyle}"
                Click="{x:Bind ViewModel.DeleteImage}" IsEnabled="{x:Bind ViewModel.HasImageSelected, Mode=OneWay}">
          <Button.KeyboardAccelerators>
            <KeyboardAccelerator Key="Delete"/>
          </Button.KeyboardAccelerators>
        </Button>
        
        <!-- Page count -->
        <TextBlock Text="{x:Bind ViewModel.ImagePosition, Mode=OneWay}" FontFamily="Segoe UI Mono" VerticalAlignment="Center" Margin="12,0" IsHitTestVisible="False" Opacity="0.5"/>
        
        <!-- Project management -->
        <muxc:SplitButton Content="&#xe838;" Padding="0" ToolTipService.ToolTip="Open project directory..." Style="{StaticResource HeaderSplitButtonStyle}"
                          Click="{x:Bind ViewModel.ShowImageDirectory}">
          <muxc:SplitButton.Flyout>
            <Flyout>
              <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                  <Setter Property="Padding" Value="0"/>
                </Style>
              </Flyout.FlyoutPresenterStyle>

              <StackPanel>
                <ListView ItemsSource="{x:Bind ViewModel.Projects, Mode=OneWay}"
                          SelectedIndex="{x:Bind ViewModel.SelectedProjectIndex, Mode=TwoWay}"/>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Create new project..." Click="{x:Bind ViewModel.CreateNewProject}"/>
                <MenuFlyoutItem Text="Delete current project..." Click="{x:Bind ViewModel.DeleteProject}" IsEnabled="{x:Bind ViewModel.CanDeleteProject, Mode=OneWay}"/>
              </StackPanel>
            </Flyout>
          </muxc:SplitButton.Flyout>
        </muxc:SplitButton>
        
        <!-- Settings -->
        <Button Content="&#xe713;" ToolTipService.ToolTip="Open settings" Style="{StaticResource HeaderButtonStyle}"
                Click="{x:Bind ViewModel.OpenSettings}"/>
      </StackPanel>

      <!-- Progress bar & status message -->
      <muxc:ProgressBar Grid.ColumnSpan="3" Value="{x:Bind ViewModel.Progress, Mode=OneWay, Converter={StaticResource NanToZeroConverter}}" IsIndeterminate="{x:Bind ViewModel.Progress, Mode=OneWay, Converter={StaticResource IsNanToBooleanConverter}}" VerticalAlignment="Top" Background="Transparent" Maximum="1" IsHitTestVisible="False" />
      <TextBlock x:Name="StatusMessage" Grid.Column="1" Text="{x:Bind ViewModel.Status, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" Opacity="0"/>
    </Grid>

    <!-- Output image -->
    <FlipView Grid.Row="1" Background="Transparent"
              ItemsSource="{x:Bind ViewModel.Images, Mode=OneWay}"
              SelectedIndex="{x:Bind ViewModel.SelectedImageIndex, Mode=TwoWay}">
      <FlipView.ItemTemplate>
        <DataTemplate x:DataType="x:String">
          <Image Grid.Row="1" Stretch="Uniform" Source="{x:Bind Converter={StaticResource StringToImageSourceConverter}}"/>
        </DataTemplate>
      </FlipView.ItemTemplate>
    </FlipView>

    <!-- Inference options -->
    <Border Grid.Row="2" Background="{ThemeResource LayerFillColorDefaultBrush}" CornerRadius="6,6,0,0" MaxWidth="800">
      <Grid RowSpacing="6" ColumnSpacing="6" Margin="6">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Inference settings -->
        <Button Grid.Column="0" Grid.RowSpan="2" FontFamily="Segoe Fluent Icons" FontSize="24" Content="&#xe9e9;" ToolTipService.ToolTip="Inference Options" VerticalAlignment="Stretch">
          <Button.Flyout>
            <Flyout>
              <Grid ColumnSpacing="12" RowSpacing="6">
                <Grid.Resources>
                  <Style x:Key="SettingTextBlockStyle" TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Grid.Column" Value="0"/>
                  </Style>
                </Grid.Resources>

                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="160"/>
                </Grid.ColumnDefinitions>

                <!-- Headers -->
                <TextBlock Grid.ColumnSpan="2" Text="Inference Options" TextAlignment="Center" Margin="0,0,0,6" Style="{StaticResource SubtitleTextBlockStyle}"/>

                <!-- Model -->
                <TextBlock Grid.Row="1" Text="Model" Style="{StaticResource SettingTextBlockStyle}" ToolTipService.ToolTip="Selects the model used for image generation. Different models will generate different images for the same input."/>
                <Grid Grid.Row="1" Grid.Column="1" ColumnSpacing="6">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>

                  <ComboBox ItemsSource="{x:Bind ViewModel.Models, Mode=OneWay}"
                            SelectedIndex="{x:Bind ViewModel.SelectedModelIndex, Mode=TwoWay}"/>
                  <Button Grid.Column="1" FontFamily="Segoe Fluent Icons" Content="&#xe8f1;" ToolTipService.ToolTip="Manage models" VerticalAlignment="Stretch"
                          Click="{x:Bind ViewModel.ManageModels}"/>
                </Grid>


                <!-- Resolution -->
                <TextBlock Grid.Row="2" Text="Resolution" Style="{StaticResource SettingTextBlockStyle}" ToolTipService.ToolTip="Controls the size of the output image. Using higher resolutions will increase memory usage and reduce image generation speed."/>
                <ComboBox Grid.Row="2" Grid.Column="1"
                          ItemsSource="{x:Bind ViewModel.Resolutions, Mode=OneWay}"
                          SelectedIndex="{x:Bind ViewModel.SelectedResolutionIndex, Mode=TwoWay}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="graphics:SizeInt32">
                      <TextBlock Text="{x:Bind Converter={StaticResource SizeToStringConverter}}"/>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>

                <!-- Guidance scale -->
                <TextBlock Grid.Row="3" Text="Guidance strength" Style="{StaticResource SettingTextBlockStyle}" ToolTipService.ToolTip="Controls the strength of human input when forming the output. Low values can result in more creative results, while higher values will conform to the input more strictly. Selecting values too high or low degrade the quality of the output."/>
                <Slider Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="20" SmallChange="0.1" LargeChange="1" StepFrequency="0.1"
                        Value="{x:Bind ViewModel.GuidanceStrength, Mode=TwoWay}"/>

                <!-- Sampling steps -->
                <TextBlock Grid.Row="4" Text="Sampling steps" Style="{StaticResource SettingTextBlockStyle}" ToolTipService.ToolTip="Reducing this value speeds up image generation time, however it also degrades image quality."/>
                <muxc:NumberBox Grid.Row="4" Grid.Column="1" Minimum="5" Maximum="100" SmallChange="1" SpinButtonPlacementMode="Inline"
                                Value="{x:Bind ViewModel.SamplingSteps, Mode=TwoWay}"/>

                <!-- Random seed -->
                <TextBlock Grid.Row="5" Text="Random seed" Style="{StaticResource SettingTextBlockStyle}" ToolTipService.ToolTip="Affects random numbers used in the image generation process. Using the same seed number with the same settings will result in the same image being generated. Useful for testing how different settings affect the output image."/>
                <Grid Grid.Row="5" Grid.Column="1" ColumnSpacing="6">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>

                  <muxc:NumberBox Value="{x:Bind ViewModel.RandomSeed, Mode=TwoWay}"/>
                  <ToggleButton Grid.Column="1" FontFamily="Segoe Fluent Icons" Content="&#xe72e;" ToolTipService.ToolTip="Freeze seed" VerticalAlignment="Stretch"
                                IsChecked="{x:Bind ViewModel.IsSeedFrozen, Mode=TwoWay}"/>
                </Grid>
              </Grid>
            </Flyout>
          </Button.Flyout>
        </Button>

        <!-- Positive prompt -->
        <TextBox Grid.Column="1" Grid.Row="0" TextWrapping="Wrap" Padding="36,4,10,0"
                 PlaceholderText="{x:Bind ViewModel.PositivePromptPlaceholder}"
                 Text="{x:Bind ViewModel.PositivePrompt, Mode=TwoWay}">
          <ToolTipService.ToolTip>
            <StackPanel>
              <TextBlock Text="Positive prompt" FontWeight="Bold"/>
              <TextBlock Text="Describe what you would like to see on the image."/>
            </StackPanel>
          </ToolTipService.ToolTip>
        </TextBox>
        <FontIcon Grid.Column="1" Grid.Row="0" FontFamily="Segoe Fluent Icons" FontSize="20" Glyph="&#xe948;" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,6,0,0"/>

        <!-- Negative prompt -->
        <TextBox Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" Padding="36,4,10,0"
                 PlaceholderText="{x:Bind ViewModel.NegativePromptPlaceholder}"
                 Text="{x:Bind ViewModel.NegativePrompt, Mode=TwoWay}">
          <ToolTipService.ToolTip>
            <StackPanel>
              <TextBlock Text="Negative prompt" FontWeight="Bold"/>
              <TextBlock Text="Describe what you would not like to see on the image."/>
            </StackPanel>
          </ToolTipService.ToolTip>
        </TextBox>
        <FontIcon Grid.Column="1" Grid.Row="1" FontFamily="Segoe Fluent Icons" FontSize="20" Glyph="&#xe949;" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,6,0,0"/>

        <!-- Execute -->
        <Button Grid.Column="2" Grid.RowSpan="2" FontFamily="Segoe Fluent Icons" FontSize="24" Content="&#xe768;" ToolTipService.ToolTip="Generate" VerticalAlignment="Stretch"
                Click="{x:Bind ViewModel.GenerateImage}">
          <Button.KeyboardAccelerators>
            <KeyboardAccelerator Key="Enter"/>
          </Button.KeyboardAccelerators>
        </Button>
      </Grid>
    </Border>
  </Grid>
</Page>
