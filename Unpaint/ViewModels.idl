namespace Unpaint
{
  struct ModelViewModel
  {
    String Id;
    String Uri;
  };

  [default_interface]
  runtimeclass ModelsViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
  {
    ModelsViewModel();

    IObservableVector<ModelViewModel> AvailableModels{ get; };
    Boolean AreAvailableModelsEmpty{ get; };
    void UpdateAvailableModelsAsync();
    void OpenAvailableModelWebsite();
    void DownloadModelAsync();

    Int32 SelectedAvailableModel;
    Boolean IsAvailableModelSelected{ get; };
    
    IObservableVector<ModelViewModel> InstalledModels{ get; };
    Boolean AreInstalledModelsEmpty{ get; };
    void OpenInstalledModelWebsite();
    void RemoveModelAsync();

    Int32 SelectedInstalledModel;
    Boolean IsInstalledModelSelected{ get; };
  }

  [default_interface]
  runtimeclass DownloadModelViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
  {
    DownloadModelViewModel(String modelId);

    Double Progress{ get; };
    String StatusMessage{ get; };

    Boolean IsInProgress{ get; };
    Boolean IsFinished{ get; };

    void Cancel();
  }

  [default_interface]
  runtimeclass InferenceViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
  {
    InferenceViewModel();
  }
}